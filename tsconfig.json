{
  "compilerOptions": {
    // 指定ECMAScript目标版本 
    "target": "esnext",

    // 指定生成哪个模块系统代码
    "module": "esnext",

    // 启用所有严格类型检查选项。
    // 启用 --strict相当于启用 --noImplicitAny, --noImplicitThis, --alwaysStrict， 
    // --strictNullChecks和 --strictFunctionTypes和--strictPropertyInitialization。
    "strict": false,

    "jsx": "preserve",

    // 从 tslib 导入辅助工具函数（比如 __extends， __rest等）
    "importHelpers": true,

    // 决定如何处理模块
    "moduleResolution": "node",
    
    "experimentalDecorators": true,
    "skipLibCheck": true,
    "esModuleInterop": true,
    "isolatedModules": true,
    // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,

    // 生成相应的 .map文件
    "sourceMap": true,
    // 解析非相对模块名的基准目录
    "baseUrl": ".",
    "allowJs": false,
    "resolveJsonModule": true, // 包含导入的模块。json的扩展

    // 编译过程中需要引入的库文件的列表
    "lib": [
      "dom",
      "esnext"
    ],
    "incremental": true,

    // 模块名到基于 baseUrl的路径映射的列表
    "paths": {
      "@/*": [
        "src/*"
      ],
    },
    "types": [
      // "node",
      "vite/client"
    ],
    "typeRoots": [
      "./node_modules/@types/",
      "./types"
    ]
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "plugins/*.d.ts",
    "vite.config.js"
  ],
  "exclude": [
    "node_modules",
    "dist",
    "**/*.js"
  ]
}